{"ast":null,"code":"// const fs = require('fs');\nimport fs from 'fs';\nimport { MD5 } from 'crypto-js';\nlet pvk = fs.readFileSync('keys/private.key', 'utf8');\nlet pbk = fs.readFileSync('keys/public.key', 'utf8');\nconst nodeEnv = \"development\" || 'development';\nconst url = 'https://gateway.marvel.com:443';\nconst publicKey = nodeEnv === 'development' ? pbk : process.env.PUBLIC_KEY;\nconst privateKey = nodeEnv === 'development' ? pvk : process.env.PRIVATE_KEY;\nconst ts = new Date().getTime();\nconst hash = MD5(ts + privateKey + publicKey);\nexport { publicKey, ts, hash, url };","map":{"version":3,"sources":["/home/daniel/Escritorio/reactJS/comic_web/config/config.js"],"names":["fs","MD5","pvk","readFileSync","pbk","nodeEnv","url","publicKey","process","env","PUBLIC_KEY","privateKey","PRIVATE_KEY","ts","Date","getTime","hash"],"mappings":"AAAA;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,IAAIC,GAAG,GAAGF,EAAE,CAACG,YAAH,CAAgB,kBAAhB,EAAoC,MAApC,CAAV;AACA,IAAIC,GAAG,GAAGJ,EAAE,CAACG,YAAH,CAAgB,iBAAhB,EAAmC,MAAnC,CAAV;AAEA,MAAME,OAAO,GAAG,iBAAwB,aAAxC;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,MAAMC,SAAS,GAAGF,OAAO,KAAK,aAAZ,GAA4BD,GAA5B,GAAkCI,OAAO,CAACC,GAAR,CAAYC,UAAhE;AACA,MAAMC,UAAU,GAAGN,OAAO,KAAK,aAAZ,GAA4BH,GAA5B,GAAkCM,OAAO,CAACC,GAAR,CAAYG,WAAjE;AAEA,MAAMC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,MAAMC,IAAI,GAAGf,GAAG,CAACY,EAAE,GAAGF,UAAL,GAAkBJ,SAAnB,CAAhB;AAEA,SACEA,SADF,EACaM,EADb,EACiBG,IADjB,EACuBV,GADvB","sourcesContent":["// const fs = require('fs');\nimport fs from 'fs';\nimport { MD5 } from 'crypto-js';\n\nlet pvk = fs.readFileSync('keys/private.key', 'utf8');\nlet pbk = fs.readFileSync('keys/public.key', 'utf8');\n\nconst nodeEnv = process.env.NODE_ENV || 'development';\n\nconst url = 'https://gateway.marvel.com:443';\n\nconst publicKey = nodeEnv === 'development' ? pbk : process.env.PUBLIC_KEY;\nconst privateKey = nodeEnv === 'development' ? pvk : process.env.PRIVATE_KEY;\n\nconst ts = new Date().getTime();\nconst hash = MD5(ts + privateKey + publicKey);\n\nexport {\n  publicKey, ts, hash, url\n}"]},"metadata":{},"sourceType":"module"}