{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/Escritorio/reactJS/comic_web/pages/comics/[id].js\";\nimport { useRouter } from 'next/router';\nimport { url, publicKey, ts, hash } from '../../config/config';\nimport axios from 'axios';\n\nconst Comic = ({\n  comic\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" Comic: \", comic.title, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  const comics = req.data.data.results;\n  const paths = comics.map(comic => `/comics/${comic.id}`);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const link = `${url}/v1/public/comics/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  return {\n    props: {\n      comic: req.data.data.results\n    }\n  };\n}\nexport default Comic;","map":{"version":3,"sources":["/home/daniel/Escritorio/reactJS/comic_web/pages/comics/[id].js"],"names":["useRouter","url","publicKey","ts","hash","axios","Comic","comic","router","id","query","title","getStaticPaths","link","req","get","comics","data","results","paths","map","fallback","getStaticProps","params","props"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,EAAxB,EAA4BC,IAA5B,QAAuC,qBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACzB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,sBAAO;AAAA,2BAAaH,KAAK,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAJD;;AAMA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAI,GAAEZ,GAAI,wBAAuBE,EAAG,WAAUD,SAAU,SAAQE,IAAK,EAA/E;AACA,QAAMU,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,IAAV,CAAlB;AACA,QAAMG,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,OAA7B;AAEA,QAAMC,KAAK,GAAGH,MAAM,CAACI,GAAP,CAAWb,KAAK,IAAK,WAAUA,KAAK,CAACE,EAAG,EAAxC,CAAd;AACA,SAAO;AAACU,IAAAA,KAAD;AAAQE,IAAAA,QAAQ,EAAE;AAAlB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMV,IAAI,GAAI,GAAEZ,GAAI,qBAAoBsB,MAAM,CAACd,EAAG,OAAMN,EAAG,WAAUD,SAAU,SAAQE,IAAK,EAA5F;AACA,QAAMU,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,IAAV,CAAlB;AACA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLjB,MAAAA,KAAK,EAAEO,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC;AADhB;AADF,GAAP;AAMD;AAED,eAAeZ,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport {url, publicKey, ts, hash} from '../../config/config';\nimport axios from 'axios';\n\nconst Comic = ({comic}) => {\n  const router = useRouter();\n  const { id } = router.query;\n  return <p> Comic: { comic.title } </p>\n}\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  const comics = req.data.data.results;\n\n  const paths = comics.map(comic => `/comics/${comic.id}`);\n  return {paths, fallback: false};\n}\n\nexport async function getStaticProps({params}) {\n  const link = `${url}/v1/public/comics/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  return {\n    props: {\n      comic: req.data.data.results\n    }\n  }\n  \n}\n\nexport default Comic;"]},"metadata":{},"sourceType":"module"}