{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/Escritorio/reactJS/comic_web/pages/comics/[id].js\";\nimport { useRouter } from 'next/router';\nimport MainLayout from '../../layouts/MainLayout';\nimport { url, publicKey, ts, hash } from '../../config/config';\nimport { getReq } from '../../config/axios';\nimport CardMain from '../../components/CardMain';\nimport CardCharacter from '../../components/CardCharacter';\n\nconst Comic = ({\n  comic,\n  characters\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const getCharacters = characters.map(character => /*#__PURE__*/_jsxDEV(CardCharacter, {\n    character: character\n  }, character.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [\" \", comic.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMain, {\n      data: comic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sub-title\",\n      children: \" Characters \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-content template-min\",\n      children: getCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const comics = await getReq(link);\n  const paths = comics.map(comic => `/comics/${comic.id}`);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const linkComic = `${url}/v1/public/comics/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const linkCharacters = `${url}/v1/public/comics/${params.id}/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const comic = await getReq(linkComic);\n  const characters = await getReq(linkCharacters);\n  return {\n    props: {\n      comic: comic[0],\n      characters\n    }\n  };\n}\nComic.Layout = MainLayout;\nexport default Comic;","map":{"version":3,"sources":["/home/daniel/Escritorio/reactJS/comic_web/pages/comics/[id].js"],"names":["useRouter","MainLayout","url","publicKey","ts","hash","getReq","CardMain","CardCharacter","Comic","comic","characters","router","id","query","getCharacters","map","character","title","getStaticPaths","link","comics","paths","fallback","getStaticProps","params","linkComic","linkCharacters","props","Layout"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,EAAxB,EAA4BC,IAA5B,QAAuC,qBAAvC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AACrC,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,QAAMC,aAAa,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,SAAS,iBAC7C,QAAC,aAAD;AAAmC,IAAA,SAAS,EAAEA;AAA9C,KAAoBA,SAAS,CAACJ,EAA9B;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,sBAAyBH,KAAK,CAACQ,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,gBACIK;AADJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxBD;;AA0BA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAI,GAAElB,GAAI,wBAAuBE,EAAG,WAAUD,SAAU,SAAQE,IAAK,EAA/E;AACA,QAAMgB,MAAM,GAAG,MAAMf,MAAM,CAACc,IAAD,CAA3B;AAEA,QAAME,KAAK,GAAGD,MAAM,CAACL,GAAP,CAAWN,KAAK,IAAK,WAAUA,KAAK,CAACG,EAAG,EAAxC,CAAd;AACA,SAAO;AAACS,IAAAA,KAAD;AAAQC,IAAAA,QAAQ,EAAE;AAAlB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMC,SAAS,GAAI,GAAExB,GAAI,qBAAoBuB,MAAM,CAACZ,EAAG,OAAMT,EAAG,WAAUD,SAAU,SAAQE,IAAK,EAAjG;AACA,QAAMsB,cAAc,GAAI,GAAEzB,GAAI,qBAAoBuB,MAAM,CAACZ,EAAG,kBAAiBT,EAAG,WAAUD,SAAU,SAAQE,IAAK,EAAjH;AAEA,QAAMK,KAAK,GAAG,MAAMJ,MAAM,CAACoB,SAAD,CAA1B;AACA,QAAMf,UAAU,GAAG,MAAML,MAAM,CAACqB,cAAD,CAA/B;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLlB,MAAAA,KAAK,EAAEA,KAAK,CAAC,CAAD,CADP;AACYC,MAAAA;AADZ;AADF,GAAP;AAKD;AAEDF,KAAK,CAACoB,MAAN,GAAe5B,UAAf;AAEA,eAAeQ,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport MainLayout from '../../layouts/MainLayout';\nimport {url, publicKey, ts, hash} from '../../config/config';\nimport { getReq } from '../../config/axios';\n\nimport CardMain from '../../components/CardMain';\nimport CardCharacter from '../../components/CardCharacter';\n\nconst Comic = ({comic, characters}) => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const getCharacters = characters.map( character => \n    <CardCharacter key={character.id}  character={character} />\n  )\n\n  return (\n    <section className=\"container\">\n\n      <h2 className=\"title\"> { comic.title } </h2>\n      \n      <CardMain data={comic} />\n      \n      <h3 className=\"sub-title\"> Characters </h3>\n\n      <div className=\"grid-content template-min\">\n        { getCharacters }\n      </div>\n\n      \n    </section>\n  );\n}\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/comics?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const comics = await getReq(link);\n\n  const paths = comics.map(comic => `/comics/${comic.id}`);\n  return {paths, fallback: false};\n}\n\nexport async function getStaticProps({params}) {\n  const linkComic = `${url}/v1/public/comics/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const linkCharacters = `${url}/v1/public/comics/${params.id}/characters?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  \n  const comic = await getReq(linkComic);\n  const characters = await getReq(linkCharacters);\n\n  return {\n    props: {\n      comic: comic[0], characters\n    }\n  }\n}\n\nComic.Layout = MainLayout;\n\nexport default Comic;"]},"metadata":{},"sourceType":"module"}