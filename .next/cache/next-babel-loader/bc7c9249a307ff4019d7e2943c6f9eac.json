{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/daniel/Escritorio/reactJS/comic_web/pages/series/[id].js\";\nimport { useRouter } from 'next/router';\nimport { url, ts, publicKey, hash } from '../../config/config';\nimport axios from 'axios';\n\nconst Story = ({\n  serie\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" Serie: \", serie.title, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/series?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  const series = req.data.data.results;\n  const paths = series.map(serie => `/stories/${serie.id}`);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const link = `${url}/v1/public/series/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  return {\n    props: {\n      series: req.data.data.results[0]\n    }\n  };\n}\nexport default Story;","map":{"version":3,"sources":["/home/daniel/Escritorio/reactJS/comic_web/pages/series/[id].js"],"names":["useRouter","url","ts","publicKey","hash","axios","Story","serie","router","id","query","title","getStaticPaths","link","req","get","series","data","results","paths","map","fallback","getStaticProps","params","props"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,EAAd,EAAkBC,SAAlB,EAA6BC,IAA7B,QAAyC,qBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACzB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBAAO;AAAA,2BAAaH,KAAK,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;AAOA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAI,GAAEZ,GAAI,wBAAuBC,EAAG,WAAUC,SAAU,SAAQC,IAAK,EAA/E;AACA,QAAMU,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,IAAV,CAAlB;AACA,QAAMG,MAAM,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,OAA7B;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACI,GAAP,CAAWb,KAAK,IAAK,YAAYA,KAAK,CAACE,EAAI,EAA3C,CAAd;AACA,SAAO;AAACU,IAAAA,KAAD;AAAQE,IAAAA,QAAQ,EAAE;AAAlB,GAAP;AACD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMV,IAAI,GAAI,GAAEZ,GAAI,qBAAoBsB,MAAM,CAACd,EAAG,OAAMP,EAAG,WAAUC,SAAU,SAAQC,IAAK,EAA5F;AACA,QAAMU,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUF,IAAV,CAAlB;AACA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLR,MAAAA,MAAM,EAAEF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsB,CAAtB;AADH;AADF,GAAP;AAKD;AAED,eAAeZ,KAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { url, ts, publicKey, hash } from '../../config/config';\nimport axios from 'axios';\n\nconst Story = ({serie}) => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  return <p> Serie: { serie.title } </p>\n}\n\nexport async function getStaticPaths() {\n  const link = `${url}/v1/public/series?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  const series = req.data.data.results;\n  const paths = series.map(serie => `/stories/${ serie.id }`);\n  return {paths, fallback: false};\n}\n\nexport async function getStaticProps({params}) {\n  const link = `${url}/v1/public/series/${params.id}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\n  const req = await axios.get(link);\n  return {\n    props: {\n      series: req.data.data.results[0]\n    }\n  }\n}\n\nexport default Story;"]},"metadata":{},"sourceType":"module"}